// Generated by ProtoGen, Version=2.4.1.521, Culture=neutral, PublicKeyToken=55f7125234beb589.  DO NOT EDIT!
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.ProtocolBuffers;
using pbc = global::Google.ProtocolBuffers.Collections;
using pbd = global::Google.ProtocolBuffers.Descriptors;
using scg = global::System.Collections.Generic;
[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public static partial class GrSimPacket
{

    #region Extension registration
    public static void RegisterAllExtensions(pb::ExtensionRegistry registry)
    {
    }
    #endregion
    #region Static variables
    internal static pbd::MessageDescriptor internal__static_grSim_Packet__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::grSim_Packet, global::grSim_Packet.Builder> internal__static_grSim_Packet__FieldAccessorTable;
    #endregion
    #region Descriptor
    public static pbd::FileDescriptor Descriptor
    {
        get { return descriptor; }
    }
    private static pbd::FileDescriptor descriptor;

    static GrSimPacket()
    {
        byte[] descriptorData = global::System.Convert.FromBase64String(
            "ChJnclNpbV9QYWNrZXQucHJvdG8aFGdyU2ltX0NvbW1hbmRzLnByb3RvGhdn" +
            "clNpbV9SZXBsYWNlbWVudC5wcm90byJaCgxnclNpbV9QYWNrZXQSIQoIY29t" +
            "bWFuZHMYASABKAsyDy5nclNpbV9Db21tYW5kcxInCgtyZXBsYWNlbWVudBgC" +
            "IAEoCzISLmdyU2ltX1JlcGxhY2VtZW50");
        pbd::FileDescriptor.InternalDescriptorAssigner assigner = delegate(pbd::FileDescriptor root)
        {
            descriptor = root;
            internal__static_grSim_Packet__Descriptor = Descriptor.MessageTypes[0];
            internal__static_grSim_Packet__FieldAccessorTable =
                new pb::FieldAccess.FieldAccessorTable<global::grSim_Packet, global::grSim_Packet.Builder>(internal__static_grSim_Packet__Descriptor,
                    new string[] { "Commands", "Replacement", });
            return null;
        };
        pbd::FileDescriptor.InternalBuildGeneratedFileFrom(descriptorData,
            new pbd::FileDescriptor[] {
        global::GrSimCommands.Descriptor, 
        global::GrSimReplacement.Descriptor, 
        }, assigner);
    }
    #endregion

}
#region Messages
[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class grSim_Packet : pb::GeneratedMessage<grSim_Packet, grSim_Packet.Builder>
{
    private grSim_Packet() { }
    private static readonly grSim_Packet defaultInstance = new grSim_Packet().MakeReadOnly();
    private static readonly string[] _grSimPacketFieldNames = new string[] { "commands", "replacement" };
    private static readonly uint[] _grSimPacketFieldTags = new uint[] { 10, 18 };
    public static grSim_Packet DefaultInstance
    {
        get { return defaultInstance; }
    }

    public override grSim_Packet DefaultInstanceForType
    {
        get { return DefaultInstance; }
    }

    protected override grSim_Packet ThisMessage
    {
        get { return this; }
    }

    public static pbd::MessageDescriptor Descriptor
    {
        get { return global::GrSimPacket.internal__static_grSim_Packet__Descriptor; }
    }

    protected override pb::FieldAccess.FieldAccessorTable<grSim_Packet, grSim_Packet.Builder> InternalFieldAccessors
    {
        get { return global::GrSimPacket.internal__static_grSim_Packet__FieldAccessorTable; }
    }

    public const int CommandsFieldNumber = 1;
    private bool hasCommands;
    private global::grSim_Commands commands_;
    public bool HasCommands
    {
        get { return hasCommands; }
    }
    public global::grSim_Commands Commands
    {
        get { return commands_ ?? global::grSim_Commands.DefaultInstance; }
    }

    public const int ReplacementFieldNumber = 2;
    private bool hasReplacement;
    private global::grSim_Replacement replacement_;
    public bool HasReplacement
    {
        get { return hasReplacement; }
    }
    public global::grSim_Replacement Replacement
    {
        get { return replacement_ ?? global::grSim_Replacement.DefaultInstance; }
    }

    public override bool IsInitialized
    {
        get
        {
            if (HasCommands)
            {
                if (!Commands.IsInitialized) return false;
            }
            if (HasReplacement)
            {
                if (!Replacement.IsInitialized) return false;
            }
            return true;
        }
    }

    public override void WriteTo(pb::ICodedOutputStream output)
    {
        int size = SerializedSize;
        string[] field_names = _grSimPacketFieldNames;
        if (hasCommands)
        {
            output.WriteMessage(1, field_names[0], Commands);
        }
        if (hasReplacement)
        {
            output.WriteMessage(2, field_names[1], Replacement);
        }
        UnknownFields.WriteTo(output);
    }

    private int memoizedSerializedSize = -1;
    public override int SerializedSize
    {
        get
        {
            int size = memoizedSerializedSize;
            if (size != -1) return size;

            size = 0;
            if (hasCommands)
            {
                size += pb::CodedOutputStream.ComputeMessageSize(1, Commands);
            }
            if (hasReplacement)
            {
                size += pb::CodedOutputStream.ComputeMessageSize(2, Replacement);
            }
            size += UnknownFields.SerializedSize;
            memoizedSerializedSize = size;
            return size;
        }
    }

    public static grSim_Packet ParseFrom(pb::ByteString data)
    {
        return ((Builder)CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static grSim_Packet ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry)
    {
        return ((Builder)CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static grSim_Packet ParseFrom(byte[] data)
    {
        return ((Builder)CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static grSim_Packet ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry)
    {
        return ((Builder)CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static grSim_Packet ParseFrom(global::System.IO.Stream input)
    {
        return ((Builder)CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static grSim_Packet ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry)
    {
        return ((Builder)CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static grSim_Packet ParseDelimitedFrom(global::System.IO.Stream input)
    {
        return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static grSim_Packet ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry)
    {
        return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static grSim_Packet ParseFrom(pb::ICodedInputStream input)
    {
        return ((Builder)CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static grSim_Packet ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry)
    {
        return ((Builder)CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private grSim_Packet MakeReadOnly()
    {
        return this;
    }

    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(grSim_Packet prototype)
    {
        return new Builder(prototype);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<grSim_Packet, Builder>
    {
        protected override Builder ThisBuilder
        {
            get { return this; }
        }
        public Builder()
        {
            result = DefaultInstance;
            resultIsReadOnly = true;
        }
        internal Builder(grSim_Packet cloneFrom)
        {
            result = cloneFrom;
            resultIsReadOnly = true;
        }

        private bool resultIsReadOnly;
        private grSim_Packet result;

        private grSim_Packet PrepareBuilder()
        {
            if (resultIsReadOnly)
            {
                grSim_Packet original = result;
                result = new grSim_Packet();
                resultIsReadOnly = false;
                MergeFrom(original);
            }
            return result;
        }

        public override bool IsInitialized
        {
            get { return result.IsInitialized; }
        }

        protected override grSim_Packet MessageBeingBuilt
        {
            get { return PrepareBuilder(); }
        }

        public override Builder Clear()
        {
            result = DefaultInstance;
            resultIsReadOnly = true;
            return this;
        }

        public override Builder Clone()
        {
            if (resultIsReadOnly)
            {
                return new Builder(result);
            }
            else
            {
                return new Builder().MergeFrom(result);
            }
        }

        public override pbd::MessageDescriptor DescriptorForType
        {
            get { return global::grSim_Packet.Descriptor; }
        }

        public override grSim_Packet DefaultInstanceForType
        {
            get { return global::grSim_Packet.DefaultInstance; }
        }

        public override grSim_Packet BuildPartial()
        {
            if (resultIsReadOnly)
            {
                return result;
            }
            resultIsReadOnly = true;
            return result.MakeReadOnly();
        }

        public override Builder MergeFrom(pb::IMessage other)
        {
            if (other is grSim_Packet)
            {
                return MergeFrom((grSim_Packet)other);
            }
            else
            {
                base.MergeFrom(other);
                return this;
            }
        }

        public override Builder MergeFrom(grSim_Packet other)
        {
            if (other == global::grSim_Packet.DefaultInstance) return this;
            PrepareBuilder();
            if (other.HasCommands)
            {
                MergeCommands(other.Commands);
            }
            if (other.HasReplacement)
            {
                MergeReplacement(other.Replacement);
            }
            this.MergeUnknownFields(other.UnknownFields);
            return this;
        }

        public override Builder MergeFrom(pb::ICodedInputStream input)
        {
            return MergeFrom(input, pb::ExtensionRegistry.Empty);
        }

        public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry)
        {
            PrepareBuilder();
            pb::UnknownFieldSet.Builder unknownFields = null;
            uint tag;
            string field_name;
            while (input.ReadTag(out tag, out field_name))
            {
                if (tag == 0 && field_name != null)
                {
                    int field_ordinal = global::System.Array.BinarySearch(_grSimPacketFieldNames, field_name, global::System.StringComparer.Ordinal);
                    if (field_ordinal >= 0)
                        tag = _grSimPacketFieldTags[field_ordinal];
                    else
                    {
                        if (unknownFields == null)
                        {
                            unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                        }
                        ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                        continue;
                    }
                }
                switch (tag)
                {
                    case 0:
                        {
                            throw pb::InvalidProtocolBufferException.InvalidTag();
                        }
                    default:
                        {
                            if (pb::WireFormat.IsEndGroupTag(tag))
                            {
                                if (unknownFields != null)
                                {
                                    this.UnknownFields = unknownFields.Build();
                                }
                                return this;
                            }
                            if (unknownFields == null)
                            {
                                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                            }
                            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                            break;
                        }
                    case 10:
                        {
                            global::grSim_Commands.Builder subBuilder = global::grSim_Commands.CreateBuilder();
                            if (result.hasCommands)
                            {
                                subBuilder.MergeFrom(Commands);
                            }
                            input.ReadMessage(subBuilder, extensionRegistry);
                            Commands = subBuilder.BuildPartial();
                            break;
                        }
                    case 18:
                        {
                            global::grSim_Replacement.Builder subBuilder = global::grSim_Replacement.CreateBuilder();
                            if (result.hasReplacement)
                            {
                                subBuilder.MergeFrom(Replacement);
                            }
                            input.ReadMessage(subBuilder, extensionRegistry);
                            Replacement = subBuilder.BuildPartial();
                            break;
                        }
                }
            }

            if (unknownFields != null)
            {
                this.UnknownFields = unknownFields.Build();
            }
            return this;
        }


        public bool HasCommands
        {
            get { return result.hasCommands; }
        }
        public global::grSim_Commands Commands
        {
            get { return result.Commands; }
            set { SetCommands(value); }
        }
        public Builder SetCommands(global::grSim_Commands value)
        {
            pb::ThrowHelper.ThrowIfNull(value, "value");
            PrepareBuilder();
            result.hasCommands = true;
            result.commands_ = value;
            return this;
        }
        public Builder SetCommands(global::grSim_Commands.Builder builderForValue)
        {
            pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
            PrepareBuilder();
            result.hasCommands = true;
            result.commands_ = builderForValue.Build();
            return this;
        }
        public Builder MergeCommands(global::grSim_Commands value)
        {
            pb::ThrowHelper.ThrowIfNull(value, "value");
            PrepareBuilder();
            if (result.hasCommands &&
                result.commands_ != global::grSim_Commands.DefaultInstance)
            {
                result.commands_ = global::grSim_Commands.CreateBuilder(result.commands_).MergeFrom(value).BuildPartial();
            }
            else
            {
                result.commands_ = value;
            }
            result.hasCommands = true;
            return this;
        }
        public Builder ClearCommands()
        {
            PrepareBuilder();
            result.hasCommands = false;
            result.commands_ = null;
            return this;
        }

        public bool HasReplacement
        {
            get { return result.hasReplacement; }
        }
        public global::grSim_Replacement Replacement
        {
            get { return result.Replacement; }
            set { SetReplacement(value); }
        }
        public Builder SetReplacement(global::grSim_Replacement value)
        {
            pb::ThrowHelper.ThrowIfNull(value, "value");
            PrepareBuilder();
            result.hasReplacement = true;
            result.replacement_ = value;
            return this;
        }
        public Builder SetReplacement(global::grSim_Replacement.Builder builderForValue)
        {
            pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
            PrepareBuilder();
            result.hasReplacement = true;
            result.replacement_ = builderForValue.Build();
            return this;
        }
        public Builder MergeReplacement(global::grSim_Replacement value)
        {
            pb::ThrowHelper.ThrowIfNull(value, "value");
            PrepareBuilder();
            if (result.hasReplacement &&
                result.replacement_ != global::grSim_Replacement.DefaultInstance)
            {
                result.replacement_ = global::grSim_Replacement.CreateBuilder(result.replacement_).MergeFrom(value).BuildPartial();
            }
            else
            {
                result.replacement_ = value;
            }
            result.hasReplacement = true;
            return this;
        }
        public Builder ClearReplacement()
        {
            PrepareBuilder();
            result.hasReplacement = false;
            result.replacement_ = null;
            return this;
        }
    }
    static grSim_Packet()
    {
        object.ReferenceEquals(global::GrSimPacket.Descriptor, null);
    }
}

#endregion


#endregion Designer generated code
